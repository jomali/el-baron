
[ EndSceneOne
	obj previous_style;
	Utils.erase_window();

	!! Actualizaciones de estado:
	StopDaemon(Baron);
	StopDaemon(Dragon);
	StopDaemon(GrutaVestibulo);
	Baron.is_burning = false;
	Baron.is_running_away = false;
	move Armadura to Limbo;
	move Casco to Limbo;
	move Percunos to Limbo;

	if (Checking == 0) {
		!! Créditos:
		new_line;
		VersionSub();
		Utils.press_any_key();
		Utils.erase_window();

		!! Recapitulación de decisiones del usuario:
		new_line;
		print (important) "A continuación se listan las distintas decisiones y eventos que has experimentado a lo largo de la partida:";
		new_line;
		objectloop(obj in E1_Recapitulacion && obj has on) {
			new_line;
			previous_style = Utils.set_text_style(TEXT_STYLE_REVERSED);
			print "\[ ";
			PrintToBuffer(utility_array_a, INPUT_BUFFER_LEN, obj);
			PrintCharacterArray(utility_array_a, 1); ! uppercase
			print " \]";
			Utils.set_text_style(previous_style);
			print " − ", (string) obj.description;
			new_line;
			Utils.press_any_key();
		}
		new_line;
		print (important) "Las siguientes, en cambio, son distintas posibilidades que se han quedado sin explorar:";
		new_line;
		objectloop(obj in E1_Recapitulacion && obj hasnt on) {
			new_line;
			previous_style = Utils.set_text_style(TEXT_STYLE_NOTE);
			print "\[ ";
			PrintToBuffer(utility_array_a, INPUT_BUFFER_LEN, obj);
			PrintCharacterArray(utility_array_a, 1); ! uppercase
			print " \]";
			Utils.set_text_style(TEXT_STYLE_PARSER);
			print " − ", (string) obj.description;
			Utils.set_text_style(previous_style);
			new_line;
			Utils.press_any_key();
		}
		new_line;
		print (important) "Aquí termina la demostración.";
		new_line;
		new_line;
		print (parser) "Pulsa una tecla para salir.";
		Utils.press_any_key();
		quit;
	} else {
		new_line;
		print (strong) Story, "^";
		new_line;
		print "Una historia interactiva de Victor Gijsbers.^";
		print "Versión en castellano por J. Francisco Martín.^";
		new_line;
		Utils.press_any_key();
		Utils.erase_window();
		new_line;
		print (stressed) "Chi l'anima mi lacera?^
		Chi m'agita le viscere?^
		Che strazio, ohimè, che smania!^
		Che inferno, che terror!^";
		new_line;
		print (stressed) "«¿Quién es aquel que lacera mi alma?^
		¿Quién aquel que tortura mi cuerpo?^
		¡Qué tormento! ¡Oh! ¡Qué agonía!^
		¡Qué infierno! ¡Qué terror!»^";
		new_line;
		print "De la ópera ~Don Giovanni~^
		Texto: Lorenzo da Ponte^
		Música: Wolfgang A. Mozart^";
		new_line;
		Utils.press_any_key();
		Utils.erase_window();
		new_line;
		return PlayerTo(DormitorioBaron);
	}
];

!! @Casco
Item	Casco "casco" Limbo
		after [;
			Disrobe:
				move self to parent(player);
				print "Te quitas [el self] y lo posas en el suelo. Sin él no puedes evitar sentirte vulnerable.";
				new_line;
				return true;
			Take:
				give self worn;
				print "Lo recoges del suelo y te lo pones.";
				new_line;
				return true;
		],
		before [;
			Close:
				<<Close CascoVisera>>;
			Drop:
				if (self in player && self has worn) {
					<<Disrobe self>>;
				}
			Open:
				<<Open CascoVisera>>;
			Wear:
				if (TestScope(self, player) && self notin player) {
					<<Take self>>;
				}
		],
		description [;
			print "Un [self](casco) funcional, sin adornos de ningún tipo.";
			if (self in player && self has worn) {
				if (CascoVisera has open) {
					print " [La CascoVisera] está abierta, dejando libre todo el campo visual pero exponiendo tu rostro ante un eventual ataque.";
				} else {
					print " [La CascoVisera] está cerrada, ofreciendo la máxima protección.";
				}
			} else {
				if (CascoVisera has open) {
					print " Tiene [la CascoVisera] abierta.";
				} else {
					print " Tiene [la CascoVisera] cerrada.";
				}
			}
			new_line;
			return true;
		],
;

!! @CascoVisera
!! TODO - Aceptar los adjetivos abierto/cerrado contextualmente (modificando
!! la rutina de parsing del propio objeto)
Item	-> -> CascoVisera "visera"
 has	female open openable,
 with	name_f 'visera',
		name_m 'visor',
		gender G_FEMENINO,
		adjectives 'casco',
		!!------------------
		after [;
			Close:
				print "Cierras la [self](visera) [del Casco].";
				new_line;
				return true;
			Open:
				print "Abres la [self](visera) [del Casco].";
				new_line;
				return true;
		],
		before [;
			DefaultAction:
				if (self has open) {
					<<Close self>>;
				} else {
					<<Open self>>;
				}
			Examine:
				<<Examine Casco>>;
		],
;


!!==============================================================================
!!
!!	2)	Vestíbulo de la gruta
!!
!!------------------------------------------------------------------------------

!! @DirGrutaVestibulo
AdjacentRoom	DirGrutaVestibulo "vestíbulo"
		before [;
			Enter:
				if (Baron.is_running_away()) {
					if (Baron.is_burning()) {
						print "Corres desesperadamente de vuelta al [GrutaVestibulo](vestíbulo), destrozando a tu paso [los Huesos] del suelo.";
					} else {
						print "Continúas alejándote del monstruo a la carrera. El crujido de [los Huesos] aplastados a tu paso.";
					}
				} else {
					print "Regresas al [GrutaVestibulo](vestíbulo), destrozando a tu paso [los Huesos] que alfombran el suelo.";
				}
				new_line;
				self.AdjacentRoom::before();
				return true;
		],
;

!! TODO - actualizar PC_is_coming_in
!! @GrutaVestibulo
Indoors	GrutaVestibulo
		description [;
			if (Baron.is_burning()) {
				print "A través de las llamas alcanzas a distinguir [Marmol](mármol:REMARKABLE_OBJECT) negro. [Huesos](Huesos:REMARKABLE_OBJECT) en el suelo. Las dos [GrutaPuertas](puertas:REMARKABLE_OBJECT) de bronce que bloquean la única salida.";
			} else {
				Tutorial.hint_keywords_a();
				print "Esta pequeña sala rectangular ha sido excavada en la roca y sus paredes y su techo han sido recubiertas después con planchas de [Marmol](mármol) negro. Dos [GrutaPuertas] sellan la única salida. Frente a ellas, en la pared opuesta del vestíbulo, un estrecho [DirGrutaPasadizo](corredor) se interna aún más en las ardientes profundidades de la montaña.";
			}
			new_line;
			return true;
		],
;

!! @GrutaPuertas
Item	-> GrutaPuertas
		!!------------------
		before [;
			!! TODO Touch/Pull/Push
			Attack,
			KnockOn:
				if (Dragon.counter > 0) {
					if (Baron.is_burning()) {
						give E1_UnGongInfernal on;
						print "Te abalanzas contra las puertas de bronce enloquecido por el dolor";
						if (self has described) {
							print ". El grabado del hombre ardiente te recibe con los ojos risueños y una sonrisa exultante. —¡Disfruta del calor!— te dice sin palabras —Aprenderás a amarlo—. Lo golpeas ferozmente con toda la fuerza de la que eres capaz y tu";
						} else {
							print " y las golpeas ferozmente con toda la fuerza de la que eres capaz. Tu";
						}
						print " guantelete arranca un sonido brutal al bronce. Una atroz disonancia que resuena contra las paredes de la cueva.";
						new_line;
						Utils.press_any_key();
						new_line;
						print "Sin embargo las puertas no se mueven. Nadie acude a abrir. Chillando de dolor mientras el calor de las llamas vaporiza la sangre de tus venas golpeas de nuevo y el áspero sonido desgarra el vestíbulo una vez más, como si el mismo Satanás estuviese golpeando un gong diabólico en las profundidades del Infierno. Pero la puerta permanece inmóvil. Nadie responde a tu llamada. Estás echando el puño hacia atrás para golpear otra vez cuando tus rodillas se doblan. Tus piernas no pueden sostenerte por más tiempo y te desplomas en el suelo. La mente embotada por el dolor. Calor… Oscuridad… No ves nada más.";
						new_line;
						print "^^^", (parser) "Pulsa una tecla.";
						Utils.press_any_key();
						return EndSceneOne();
					} else if (self.state == 0) {
						self.state = 1;
						print "Golpeas frenéticamente sobre su superficie de bronce pero no responde nadie.";
					} else {
						print "Insistes entre sollozos, desesperado. *Abridme. Abrid… Por favor…*";
					}
				} else {
					print "¿Sin haberte enfrentado antes al dragón? No. No eres un cobarde.";
				}
				new_line;
				return true;
		],
;

!! @GrutaPuertasGrabado
Atrezzo	-> -> GrutaPuertasGrabado;

!! @GrutaVestibuloFuego
Atrezzo	-> GrutaVestibuloFuego "fuego"
 class	Background,
 has	light male,
 with	name_f 'claridad' 'llama' 'luz',
		name_fp 'llamas',
		name_m 'fuego' 'fulgor' 'resplandor',
		name_mp 'fuegos',
		gender G_MASCULINO,
		adjectives 'lengua' 'lenguas',
		!!------------------
		before [;
			Blow,
			SwitchOff:
				print "Nadie podría apagar un fuego como ese.";
				new_line;
				return true;
		],
		description [;
			print "Un incendio salvaje arde en las profundidades de la gruta y arroja destellos de una luz rojiza y anaranjada a tu alrededor.";
			new_line;
			return true;
		],
;


!!==============================================================================
!!
!!	2)	Un pequeño pasadizo
!!
!!------------------------------------------------------------------------------

!! @DirGrutaPasadizo
AdjacentRoom	DirGrutaPasadizo "pasadizo"
		before [;
			Enter:
				switch (location) {
					GrutaVestibulo:
						if (Dragon.counter == 4) {
							print "Al girarte la visión es tan horrible que te deja clavado en el sitio.";
							new_line;
							return Dragon.daemon();
						} else if (Baron.is_burning()) {
							GrutaPasadizo.PC_is_coming_in = true;
							print "Corres desorientado, aplastando los huesos de aquellos que no tuvieron mejor suerte que tú al plantar cara al dragón.";
						} else {
							GrutaPasadizo.PC_is_coming_in = true;
							print "Haces lo posible por evitar los restos humanos. A cada paso, sin embargo, el chasquido de huesos aplastados bajo tus botas.";
						}
						new_line;
				}
				return self.AdjacentRoom::before();
		],
;

    !! Object grot_fake_draak "dragon" GrutaPasadizo
    !!   with name 'dragon',
    !!        description
    !!          "The dragon is in the large hall to the north.",
	!!    before [;
	!!      Examine: return false;
	!!      default: "You will first have to enter the hall to the north.";
	!!    ],
	!!    life [;
	!!      default: "You will first have to enter the hall to the north.";
	!!    ],
    !!    has male animate scenery;



!!==============================================================================
!!
!!	3)	Guarida del dragón
!!
!!------------------------------------------------------------------------------

!! @DirGrutaDragon
AdjacentRoom	DirGrutaDragon
		short_name [;
			print "[](guarida:DIRECTION_OBJECT) del dragón";
			return true;
		],
		!!------------------
		adjacent_room GrutaDragon,
		before [;
			Enter:
				if (Baron.is_burning()) {
					print "Aullando por culpa de las quemaduras e incapaz de pensar con claridad, entras corriendo de nuevo en la guarida del dragón.";
				!! TODO - magic numbers
				} else if (Dragon.counter == 3) {
					print "Lo piensas mejor y decides plantar cara a la bestia, pero quedas congelado por la visión.";
					new_line;
					return Dragon.daemon();
				} else if (Baron.is_running_away()) {
					print "Recompones el ánimo tras unos instantes. No puedes huir así. No eres un cobarde. Estás dispuesto a plantar cara.";
				} else if (self.PC_hesitates) {
				} else {}
				new_line;
				return self.AdjacentRoom::before();
		],
 private
		PC_hesitates true,
;

!! @GrutaDragon
Indoors	GrutaDragon
		initial [;
			if (self hasnt visited) {
				Baron.is_running_away = true;
				StartDaemon(Dragon);
			}
		],
;

!! @Dragon
Character	-> Dragon "dragón"
		daemon [;
			!! El daemon gestiona el movimiento del dragón, con sus intentos
			!! por incinerar o comerse al Barón:
			switch (location) {
				GrutaVestibulo:
					if (~~Baron.is_burning()) {
						if (self.counter == 2) {
							new_line;
							print "Un estruendo ensordecedor hace temblar las paredes de la cueva. El olor a azufre es más intenso de pronto. Cuesta respirar.";
							new_line;
						} else if (self.counter == 3) {
							new_line;
							print "Ves un fogonazo de luz a tu espalda. El [DirGrutaPasadizo](pasillo) que conduce a la guarida del dragón se ha llenado de pronto con un torrente de fuego que se propaga a toda velocidad hacia el vestíbulo, como un tentáculo ardiente en busca de su presa.";
							new_line;
						} else if (self.counter >= 4) {
							self.spit_fire();
							new_line;
							print "Y de nuevo el alarido sobrenatural y aterrador de la bestia, tan sólo un instante antes de que la tempestad de llamas estalle en el interior del vestíbulo. No hay escapatoria. El dolor que sucede [al Fuego] supera cualquier límite concebible.";
							new_line;
						}
					}
			}
			self.counter++;
			return true;
		],
		!!------------------
		counter 0,
 private
		spit_fire [;
			StartDaemon(Baron);
			move GrutaDragonFuego to Limbo;
			move GrutaPasadizoFuego to Limbo;
			move GrutaVestibuloFuego to Limbo;
			move Fuego to Baron;
			Baron.is_burning = true;
			if (self.counter < 3) self.counter = 3;
		],
		!!------------------
;
